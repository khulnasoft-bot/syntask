[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "prefect"
description = "Workflow orchestration and management."
readme = "README.md"
authors = [
    {name = "Prefect Technologies, Inc.", email = "help@prefect.io"}
]
classifiers = [
    "Natural Language :: English",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
]
dynamic = ["version"]
requires-python = ">=3.8"

dependencies = [
    "aiosqlite>=0.17.0",
    "alembic>=1.7.5,<2.0.0",
    "apprise>=1.1.0,<2.0.0",
    "asyncpg>=0.23",
    "click>=8.0,<8.2",
    "cryptography>=36.0.1",
    "dateparser>=1.1.1,<2.0.0",
    "docker>=4.0,<7.0",
    "graphviz>=0.20.1",
    "griffe>=0.20.0",
    "jinja2>=3.0.0,<4.0.0",
    "jinja2-humanize-extension>=0.4.0",
    "humanize>=4.9.0",
    "kubernetes>=24.2.0,<30.0.0",
    "pytz>=2021.1,<2025",
    "readchar>=4.0.0,<5.0.0",
    "sqlalchemy>=1.4.22,!=1.4.33,<3.0.0",
    "sqlalchemy[asyncio]>=1.4.22,!=1.4.33,<3.0.0",
    "typer>=0.12.0,!=0.12.2,<0.13.0",
    "anyio>=3.7.1,<4.0.0",
    "asgi-lifespan>=1.0,<3.0",
    "cachetools>=5.3,<6.0",
    "cloudpickle>=2.0,<4.0",
    "coolname>=1.0.4,<3.0.0",
    "croniter>=1.0.12,<3.0.0",
    "fsspec>=2022.5.0",
    "httpcore>=1.0.5,<2.0.0",
    "httpx[http2]>=0.23,!=0.23.2",
    "importlib_metadata>=4.4; python_version < '3.10'",
    "importlib-resources>=6.1.3,<6.2.0",
    "jsonpatch>=1.32,<2.0",
    "jsonschema>=4.0.0,<5.0.0",
    "orjson>=3.7,<4.0",
    "packaging>=21.3,<24.3",
    "pathspec>=0.8.0",
    "pendulum<3.0; python_version < '3.12'",
    "pendulum>=3.0.0,<4; python_version >= '3.12'",
    "pydantic>=1.10.0,!=2.0.0,!=2.0.1,!=2.1.0,<3.0.0",
    "pydantic[email]>=1.10.0,!=2.0.0,!=2.0.1,!=2.1.0,<3.0.0",
    "pydantic_core>=2.12.0,<3.0.0",
    "python_dateutil>=2.8.2,<3.0.0",
    "python-slugify>=5.0,<9.0",
    "pyyaml>=5.4.1,<7.0.0",
    "rfc3339-validator>=0.1.4,<0.2.0",
    "rich>=11.0,<14.0",
    "ruamel.yaml>=0.17.0",
    "sniffio>=1.3.0,<2.0.0",
    "toml>=0.10.0",
    "typing_extensions>=4.5.0,<5.0.0",
    "ujson>=5.8.0,<6.0.0",
    "uvicorn>=0.14.0,<0.29.0",
    "websockets>=10.4,<13.0",
    "itsdangerous",
    "python-multipart>=0.0.7",
]

[project.urls]
"Homepage" = "https://www.prefect.io"
"Changelog" = "https://github.com/PrefectHQ/prefect/blob/main/RELEASE-NOTES.md"
"Documentation" = "https://docs.prefect.io"
"Source" = "https://github.com/PrefectHQ/prefect"
"Tracker" = "https://github.com/PrefectHQ/prefect/issues"

[project.scripts]
prefect = "prefect.cli:app"

[project.entry-points."mkdocs.plugins"]
"render_swagger" = "prefect.utilities.render_swagger:SwaggerPlugin"


[project.optional-dependencies]
dev = [
    "ruff",
    "cairosvg",
    "codespell>=2.2.6",
    "ddtrace",
    "ipython == 8.12.*; python_version == '3.8'",
    "ipython; python_version > '3.8'",
    "jinja2",
    "mkdocs",
    "mkdocs-gen-files",
    "mkdocs-material",
    "mkdocstrings-python",
    "mike",
    "mock; python_version < '3.8'",
    "moto >= 5",
    "mypy",
    "numpy",
    "pillow",
    "pre-commit",
    "pluggy >= 1.4.0",
    "pytest > 7, < 8",
    "pytest-asyncio >= 0.18.2, != 0.22.0, < 0.23.0",
    "pytest-cov",
    "pytest-benchmark",
    "pytest-env",
    "pytest-flakefinder",
    "pytest-timeout",
    "pytest-xdist < 3.4.0",
    "pytkdocs >= 0.14.2",
    "pyyaml",
    "requests",
    "setuptools != 60.9.0; python_version < '3.8'",
    "vermin",
    "virtualenv",
    "watchfiles",
    "respx",
]

[tool.setuptools_scm]
write_to = "src/prefect/_version.py"

[tool.black]
preview = true

[tool.mypy]
disallow_untyped_defs = false
check_untyped_defs = false

[tool.mypy-prefect.flows]
ignore_errors = true

[tool.mypy-prefect.tasks]
ignore_errors = true

[tool.pytest.ini_options]
addopts = "-rfEs"
norecursedirs = [
    "*.egg-info",
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".vscode",
    "node_modules",
]
python_files = [
    "test_*.py",
    "bench_*.py",
]
python_functions = [
    "test_*",
    "bench_*",
]

markers = [
    "service(arg): a service integration test. For example 'docker'",
    "enable_api_log_handler: by default, sending logs to the API is disabled. Tests marked with this use the handler.",
    "clear_db: marker to clear the database after test completion",
]

env = [
    "PREFECT_TEST_MODE=1",
    "PREFECT_LOGGING_SERVER_LEVEL=DEBUG",
    'PYTEST_TIMEOUT=20',
]

asyncio_mode = 'auto'
timeout = 90

filterwarnings = [
    "error",
    "ignore::DeprecationWarning:tornado.platform.asyncio.*",
    "ignore::DeprecationWarning:tornado.ioloop",
    "ignore:Support for class-based `config` is deprecated",
    "ignore:The `__fields__` attribute is deprecated",
    "ignore:The private method `_iter` will be removed",
    "ignore:The `__fields_set__` attribute is deprecated, use `model_fields_set` instead",
    "ignore:`__get_validators__` is deprecated and will be removed, use `__get_pydantic_core_schema__`",
    "ignore:The `dict` method is deprecated; use `model_dump` instead",
    "ignore:The `schema` method is deprecated; use `model_json_schema` instead",
    "ignore:Default value default=",
    "ignore:Implicitly cleaning up:ResourceWarning",
    "ignore::ResourceWarning:distributed.diskutils",
    "ignore:unclosed:ResourceWarning:distributed.node",
    "ignore::ImportWarning:google.api_core.exceptions",
    "ignore:coroutine 'Connection.cursor' was never awaited:RuntimeWarning",
    "ignore:coroutine 'AsyncAdapt_asyncpg_cursor._prepare_and_execute' was never awaited:RuntimeWarning",
    "ignore:The `RayTaskRunner` has moved:DeprecationWarning",
    "ignore:The `DaskTaskRunner` has moved:DeprecationWarning",
    "ignore:`DeploymentSpec` has been replaced by `Deployment`:DeprecationWarning",
    "ignore:the imp module is deprecated:DeprecationWarning",
    "ignore:distutils Version classes are deprecated:DeprecationWarning",
    "ignore:The distutils package is deprecated:DeprecationWarning",
    "ignore:Use setlocale:DeprecationWarning",
    "ignore:Skipped unsupported reflection of expression-based index:sqlalchemy.exc.SAWarning",
    "ignore:The --rsyncdir command line argument and rsyncdirs config variable are deprecated.:DeprecationWarning",
    "ignore:Prefect will drop support for Python 3.7:FutureWarning",
    "ignore:`PREFECT_API_URL` uses `/account/` but should use `/accounts/`.:UserWarning",
    "ignore:`PREFECT_API_URL` should have `/api` after the base URL.:UserWarning",
    "ignore:datetime\\.datetime\\.utcnow\\(\\) is deprecated and scheduled for removal in a future version\\..*:DeprecationWarning",
    "ignore:datetime\\.datetime\\.utcfromtimestamp\\(\\) is deprecated and scheduled for removal in a future version\\..*:DeprecationWarning",
    "ignore::sqlalchemy.exc.SAWarning",
    "ignore::ResourceWarning",
    "ignore::pytest.PytestUnraisableExceptionWarning",
    "ignore::pluggy.PluggyTeardownRaisedWarning",
]

[tool.coverage.report]
exclude_lines = [
    "@(abc\\.)?abstractmethod"
]

omit = [
    "src/prefect/server/database/migrations/versions/*",
]

ignore_errors = true

[tool.coverage.run]
branch = true

[tool.vermin]
make_paths_absolute = false
backports = [
    "typing_extensions",
]
format = "parsable"
eval_annotations = true
only_show_violations = true
targets = "3.8-"
exclusion_regex = "^src/prefect/_vendor/.*$|^src/prefect/utilities/compat\\.py$"